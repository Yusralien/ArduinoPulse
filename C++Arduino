/*Create by group 5 */

#include <SPI.h>
#include <Wire.h>
#include <Adafruit_GFX.h>
#include <Adafruit_SSD1306.h>


// Create the OLED display object
Adafruit_SSD1306 display(128, 64, &Wire, -1);

// Define the sensor pin
#define sensor A0
#define HIGH_PULSE_THRESHOLD 540  // Adjust based on Serial Monitor readings

// Define variables for pulse and BPM calculation
int pulseValue;
long lastBeatTime = 0;
long bpmCalculationInterval = 5000;  // Calculate BPM every 5 seconds
long lastBPMUpdate = 0;
int pulseCount = 0;
int bpm = 0;

// Define variables for drawing the pulse wave on OLED
int x = 0;  // Position of the next data point
int lastX = 0;
int lastY = 0;

void setup() {
  // Start Serial communication for debugging
  Serial.begin(9600);

  // Initialize the OLED display
  if (!display.begin(SSD1306_SWITCHCAPVCC, 0x3C)) {
    Serial.println(F("OLED display not detected!"));
    while (true);  // Stop execution if display is not found
  }
  
  display.clearDisplay();
  display.setTextColor(SSD1306_WHITE);
  display.setTextSize(2);
}

void loop() {
  pulseValue = analogRead(sensor);

  // Debug: Print raw pulse value to Serial Monitor
  Serial.println(pulseValue);

  // Map the sensor value to OLED graph range
  int mappedValue = map(pulseValue, 0, 1024, 0, 45);
  int y = 60 - mappedValue;

  // Draw the pulse graph on the OLED
  if (x > 128) {
    x = 0;
    display.clearDisplay();
  }
  display.drawLine(lastX, lastY, x, y, WHITE);
  lastX = x;
  lastY = y;
  x++;

  // Pulse detection logic
  if (pulseValue > HIGH_PULSE_THRESHOLD) {
    if (millis() - lastBeatTime > 300) {  // Minimum 300ms between beats
      lastBeatTime = millis();
      pulseCount++;
    }
  }

  // Update BPM every 5 seconds
  if (millis() - lastBPMUpdate >= bpmCalculationInterval) {
    bpm = (pulseCount * 60) / (bpmCalculationInterval / 1000);  // BPM calculation
    pulseCount = 0;  // Reset pulse count
    lastBPMUpdate = millis();
  }

  // Display BPM on OLED
  display.setCursor(0, 0);
  display.setTextSize(1);
  display.println("Heart Rate:");
  display.setTextSize(2);
  display.setCursor(0, 20);
  display.print(bpm);
  display.print(" BPM");
  display.display();

  delay(50);  // Small delay for smoother display updates
}
